# name: Validate Caching
# on:
#   pull_request:
#     branches:
#       - main
#       - releases/**
#     paths-ignore:
#       - '**.md'
#   push:
#     branches:
#       - main
#       - releases/**
#     paths-ignore:
#       - '**.md'

# jobs:
#   # Build and unit test
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: Setup Node.js
#       uses: actions/setup-node@v1
#       with:
#         node-version: '14'
#         cache: npm
# #     - name: Determine npm cache directory
# #       id: cache
# #       run: |
# #         echo "::set-output name=dir::$(npm config get cache)"
#     - name: Restore npm cache
#       uses: actions/cache@v2
#       with:
#         env:
#         cache-name: npm
#         path: node_modules
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
#     - name: Install node dependencies     
#       if: steps.cache.outputs.cache-hit != 'true'
#       run: npm ci
#     - name: Prettier Format Check
#       run: npm run format-check
#     - name: ESLint Check
#       run: npm run lint
#     - name: Build & Test
#       run: npm run test
#     - name: Ensure dist/ folder is up-to-date
#       if: ${{ runner.os == 'Linux' }}
#       shell: bash
#       run: |
#         npm run build
#         if [ "$(git diff --ignore-space-at-eol | wc -l)" -gt "0" ]; then
#           echo "Detected uncommitted changes after build.  See status below:"
#           git diff
#           exit 1
#         fi


name: Caching npm packages

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build
      run: npm build
